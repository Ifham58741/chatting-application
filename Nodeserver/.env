

# --- Database ---
MONGODB_URI= mongodb+srv://mdifhamullah37:Ifh%4058741@cluster0.szisweg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
# --- Server ---
PORT=8000
DEFAULT_ROOM=general

# --- Authentication ---
# Generate a strong random secret (e.g., openssl rand -hex 32)
JWT_SECRET=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxMjM0IiwidXNlcm5hbWUiOiJpZmhhbSIsImV4cCI6MTcwNjkxNjAwMH0.tZiOGo7qEDzm-KSLI6HPbW0fxX2pN7VwY_R5a5ogIUo
JWT_EXPIRES_IN=7d # How long login tokens last (e.g., 1d, 7d, 30m) - Client needs mechanism to handle expiry

# --- Password Reset (Using Nodemailer - Example with Gmail, adjust as needed) ---
# For Gmail, you might need an "App Password" https://support.google.com/accounts/answer/185833
# EMAIL_SERVICE=Gmail # Or other Nodemailer supported service (SMTP, SendGrid, etc.)
# EMAIL_HOST=smtp.gmail.com # Required for SMTP
# EMAIL_PORT=465 # Or 587 for TLS
# EMAIL_SECURE=true # true for 465, false for other ports
# EMAIL_USER=your_email@gmail.com # Your email address
# EMAIL_PASS=your_gmail_app_password # Your email app password (NOT your regular password)
# EMAIL_FROM='"Your Chat App Name" <your_email@gmail.com>' # Sender display name and email
# CLIENT_URL=http://localhost:8000 # Base URL of your app for password reset links (used in emails)

# --- File Uploads ---
# Path relative from Nodeserver/index.js where uploads will be stored
# Ensure this directory exists and the server has write permissions.
UPLOAD_DIR=../uploads/avatars
# Publicly accessible URL path for uploads (must match express.static route in index.js)
UPLOAD_ROUTE=/uploads/avatars
MAX_FILE_SIZE=1048576 # Max avatar size in bytes (e.g., 1MB = 1 * 1024 * 1024)

# --- Other ---
MESSAGE_HISTORY_LIMIT=50 # Number of messages to load initially per chat
